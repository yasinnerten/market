market/
├── backend/
│   ├── cmd/
│   │   └── api/
│   │       └── main.go
│   │
│   ├── internal/
│   │   ├── handler/
│   │   │   ├── auth.go
│   │   │   ├── product.go
│   │   │   ├── cart.go
│   │   │   ├── order.go
│   │   │   ├── admin.go
│   │   │   └── health.go
│   │   ├── logger/
│   │   │   ├── logger.go
│   │   ├── model/
│   │   │   ├── user.go
│   │   │   ├── product.go
│   │   │   ├── cart.go
│   │   │   ├── order.go
│   │   │   └── admin.go
│   │   ├── middleware/
│   │   │   ├── auth.go
│   │   │   ├── cors.go
│   │   │   └── jwt.go
│   │   │   └── logger.go
│   │   ├── db/
│   │   │   ├── postgres.go
│   │   │   ├── crud.go
│   │   │   └── admin_init.go
│   │   └── logger/
│   │       └── logger.go
│   ├── migrations/
│   │   └── 000001_init_schema.up.sql
│   │   └── 000002_add_indexes.up.sql
│   ├── uploads/
│   ├── scripts/
│   │   └── backup.sh
│   ├── Dockerfile
│   ├── go.sum
│   └── go.mod
│   
├── frontend/
│   ├── src/
│   │   ├── components/
│   │   │   ├── Layout/
│   │   │   │   ├── Header.tsx
│   │   │   │   ├── Footer.tsx
│   │   │   │   ├── Sidebar.tsx
│   │   │   │   ├── index.tsx
│   │   │   │   ├── Navbar/
│   │   │   │   │   ├── SearchBar.tsx
│   │   │   │   │   ├── index.tsx
│   │   │   │   │   ├── CartButton.tsx
│   │   │   │   │   └── UserMenu.tsx
│   │   │   │   └── Footer/
│   │   │   │       └── index.tsx
│   │   │   ├── Products/
│   │   │   │   ├── CategoryFilter.tsx
│   │   │   │   ├── ProductGrid.tsx
│   │   │   │   ├── ProductCard.tsx
│   │   │   │   ├── ProductSort.tsx
│   │   │   │   └── ProductDetail.tsx
│   │   │   ├── Cart/
│   │   │   │   ├── CartList.tsx
│   │   │   │   └── CartItem.tsx
│   │   │   ├── Auth/
│   │   │   │   └── ProtectedRoute.tsx
│   │   │   ├── Home/
│   │   │   │   └── HeroBanner.tsx
│   │   │   ├── Wishlist/
│   │   │   │   └── WishlistItem.tsx
│   │   │   ├── common/
│   │   │   │   ├── ErrorBoundary.tsx
│   │   │   │   ├── Input.tsx
│   │   │   │   ├── LoadingSpinner.tsx
│   │   │   │   ├── ProductSkeleton.tsx
│   │   │   │   └── Toast.tsx
│   │   │   └── Admin/
│   │   │       ├── index.tsx
│   │   │       ├── Dashboard.tsx
│   │   │       ├── ProductList.tsx
│   │   │       ├── ProductModal.tsx
│   │   │       ├── ProductManagement.tsx
│   │   │       ├── ProductForm.tsx
│   │   │       └── ProductDetail.tsx
│   │   ├── pages/
│   │   │   ├── Home.tsx
│   │   │   ├── Products.tsx
│   │   │   ├── ProductDetail.tsx
│   │   │   ├── Cart.tsx
│   │   │   ├── Admin.tsx
│   │   │   ├── Login.tsx
│   │   │   └── Register.tsx
│   │   ├── services/
│   │   │   └── api.ts
│   │   ├── context/
│   │   │   ├── AuthContext.tsx
│   │   │   └── CartContext.tsx
│   │   ├── hooks/
│   │   │   ├── useAuth.ts
│   │   │   ├── useCart.ts
│   │   │   ├── useProducts.ts
│   │   │   ├── useWishlist.ts
│   │   ├── types/
│   │   │   └── index.ts
│   │   ├── App.tsx
│   │   ├── main.tsx
│   │   ├── vite-env.d.ts
│   │   └── index.css
│   ├── package.json
│   ├── tsconfig.json
│   ├── tailwind.config.js
│   ├── postcss.config.js
│   ├── vite.config.ts
│   ├── index.html
│   └── Dockerfile
│
├── .gitignore
├── README.md
├── .env
├── package-lock.json
├── package.json
├── .cursorrules
└── docker-compose.yml

## Backend (Go)

TODO: Implement rate limiting
TODO: Payments: Stripe
TODO: monitoring and alerting system for backend

### Advanced:
TODO: Add security middlewares
TODO: Caching: Redis
TODO: Search: ElasticSearch (for product searches)
TODO: File Storage: AWS S3
TODO: Task Queue: Celery, RabbitMQ, or Kafka (for order processing, emails, etc.)

## Deployment & Infrastructure
TODO: GitLab CI/CD: Automating deployment
TODO: Nginx or Traefik: Reverse proxy & load balancing
TODO: Cloud Providers: AWS

### Context TODOS
Latest fixes:

@backend @frontend @.cursorrules  Update the example content in migrations 001. Also test it.
TASK: @backend @frontend @.cursorrules configure the api.ts file to use the backend api with frontend
